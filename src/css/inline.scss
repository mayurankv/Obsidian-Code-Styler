body.cs-plugin {

	.markdown-rendered :not(pre) > code:not([class*="blur"]) {
		display: inline;
		border-radius: var(--cs-code-inline-radius);
		color: var(--cs-code-colour);
		background-color: var(--cs-code-background-colour);

		span.cm-inline-code {
			padding-left: 0 !important;
			padding-right: 0 !important;
		}
	}

	span.cm-formatting.cm-inline-code ~ span.cs-header {
		border-radius: 0px !important;
	}

	span.cs-header {
		display: inline;
		user-select: none;

		&.cm-inline-code {
			padding-left: 0.25em; // Obsidian default value
			padding-right: 0px;
			border-radius: var(--cs-code-inline-radius) 0px 0px var(--cs-code-inline-radius) !important;
		}

		~ span.cm-inline-code:not(.cs-footer) {
			padding-left: 0px !important;
			padding-right: 0px !important;
			border-radius: 0px !important;
		}

		> span:not(:first-child):not(.cs-separator) {
			margin-left: 0.5em
		}

		> span.cs-icon-container {
			display: inline-block;
			vertical-align: text-top;
			width: 1.1em;
			margin-left: 0.5em;
		}

		> span.cs-icon-container > img.cs-icon:not([class*="emoji"]) {
			display: inline;
			width: auto;
			margin: unset;
		}

		span.cs-title {
			color: var(--cs-title-color);
			font-weight: var(--cs-title-weight);
		}

		span.cs-language-title {
			color: var(--cs-language-title-color);
			font-weight: var(--cs-language-title-weight);
		}

		span.cs-separator {
			color: var(--cs-title-color);
		}

		span.cs-parameters {
			color: var(--cs-code-parameters-colour)
		}
	}

	span.cs-footer {
		padding-left: 0.4em !important;

		&.cm-inline-code {
			padding-left: 0px !important;
			padding-right: 0.25em; // Obsidian default value
			border-radius: 0px var(--cs-code-inline-radius) var(--cs-code-inline-radius) 0px !important;
		}

		button.cs-copy-icon {
			--icon-size: var(--icon-xs);
			padding: 0.15em;
			margin-left: var(--size-4-2);
			background-color: transparent;
			box-shadow: none;
			height: 100%;
			display: inline-block;

			&:hover {
				background-color: var(--background-modifier-hover)
			}

			> svg {
				display: inline;
				height: 100%;
				vertical-align: text-top;
				color: var(--code-comment)
			}

			&:hover > svg {
				color: var(--code-normal)
			}
		}
	}

	span.cs-inline-parameters {
		color: var( --code-styler-inline-colour-parameters);
	}

	span.cm-comment {
		span.cs-comment {
			font-size: inherit;
			line-height: inherit;
			padding: 0px !important;
		}
	}

	span.cs-comment {
		box-sizing:initial;

		p {
			display: inline !important;
		}
	}

	// Overwrite Obsidian Defaults
	.cm-s-obsidian span.cm-inline-code {
		color: var(--cs-code-colour);
		background-color: var(--cs-code-background-colour);

		span.cm-inline-code {
			&.cm-hmd-indented-code {
				background-color: transparent;
			}

			&:not(.cm-formatting):not(.cm-hmd-indented-code):not(.obsidian-search-match-highlight) {
				background-color: var(--cs-code-background-colour);
			}
		}

		&:not(.cm-formatting) {
			border-radius: var(--cs-code-inline-radius);
		}

		&.cm-formatting {
			border-start-start-radius: var(--cs-code-inline-radius);
			border-end-start-radius: var(--cs-code-inline-radius);
		}

		&:not(.cm-formatting) + .cm-formatting.cm-inline-code {
			border-start-end-radius: var(--cs-code-inline-radius);
			border-end-end-radius: var(--cs-code-inline-radius);
		}
	}

	// Specific Corrections
	tr code.cs-code-inline {
		white-space: normal;
	}

	.reveal img.cs-icon {
		margin: inherit;
	}
}
