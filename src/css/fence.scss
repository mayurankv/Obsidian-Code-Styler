body.cs-plugin {
	--cs-language-border-header-colour: var(--cs-fence-header-background-colour);
	--cs-language-border-separator-colour: var(--cs-fence-header-separator-background-colour);
	--cs-language-border-gutter-colour: var(--cs-fence-gutter-background-colour);

	.cs-pre-parent,
	.markdown-source-view *:not(.cm-embed-block) > {
		div.cs-header {
			font-size: var(--font-text-size);
			box-sizing: content-box;
			user-select: none;
			cursor: default;
			width: 100%;
			display: flex;
			position: sticky;
			left: 0;
			justify-content: flex-start;
			align-items: center;
			border-bottom: var(--size-2-1) solid transparent;
			background-color: var(--cs-fence-header-background-colour);
			z-index: 4;
			padding-bottom: var(--size-4-2);
			grid-column: span 2;
			// overflow-x: hidden;
			// overflow-y: hidden;

			&::before {
				content: "";
				position: absolute;
				top: calc(-1 * var(--size-4-3));
				left: calc(-1 * calc(var(--size-4-4) - var(--cs-fence-gutter-language-border-size)));
				// right: calc(-1 * calc(var(--size-4-12) + var(--cs-fence-fade-width)));
				right: calc(-1 * var(--cs-fence-fade-width));
				bottom: 0;
				background: inherit;
				z-index: 2;
				box-shadow: calc(-1 * var(--cs-fence-gutter-language-border-size)) 0 0px var(--cs-language-border-header-colour);
			}

			&::after {
				content: "";
				position: absolute;
				bottom: calc(-1 * var(--size-2-1));
				top: 0;
				left: calc(-1 * calc(var(--size-4-4) - var(--cs-fence-gutter-language-border-size)));
				// right: calc(-1 * calc(var(--size-4-12) + var(--cs-fence-fade-width)));
				right: calc(-1 * var(--cs-fence-fade-width));
				z-index: 1;
				opacity: 1;
				transition-property: opacity;
				transition-timing-function: ease-in-out;
				transition-duration: var(--cs-transition-length-fold);
				background-color: var(--cs-fence-header-separator-background-colour);
				box-shadow: calc(-1 * var(--cs-fence-gutter-language-border-size)) 0 0px var(--cs-language-border-separator-colour);
			}

			&:hover button{
				opacity: 1;
			}

			> div {
				display: flex;
				flex-direction: row;
				flex: 0 0 auto;
				// overflow: overlay;
				white-space: nowrap;
				z-index: inherit;

				margin-right: var(--size-4-3);
			}

			> div.cs-icon-container {
				height: 100%;

				img.cs-icon {
					width: var(--cs-fence-header-icon-size);
					height: var(--cs-fence-header-icon-size);
					filter: var(--cs-fence-header-icon-gray-scale);
				}
			}

			> div.cs-language-title {
				background-color: var(--cs-fence-header-language-title-background-colour);
				color: var(--cs-fence-header-language-title-text-colour);
				font-family: var(--cs-fence-header-language-title-font-family);
				font-style: var(--cs-fence-header-language-title-font-style);
				font-weight: var(--cs-fence-header-language-title-font-weight);

				position: relative;
				align-items: center;
				height: 100%;
				padding-left: var(--size-4-2);
				padding-right: var(--size-4-2);
				border-radius: var(--cs-fence-curvature);

				&::after {
					content: "";
					background: var(--cs-fence-header-language-title-background-colour);
					position: absolute;
					left: 0;
					right: 0;
					top: 0;
					bottom: 0;
					width: 100%;
					height: 100%;
					border-radius: var(--cs-fence-curvature) var(--cs-fence-curvature) 0 0;
					padding-bottom: var(--size-4-2);
					z-index: -1;
					box-shadow: 0 calc(-1 * var(--size-4-2)) var(--cs-fence-header-language-title-background-colour)
				}
			}

			> div.cs-named-title {
				background-color: var(--cs-fence-header-named-title-background-colour);
				color: var(--cs-fence-header-named-title-text-colour);
				font-family: var(--cs-fence-header-named-title-font-family);
				font-style: var(--cs-fence-header-named-title-font-style);
				font-weight: var(--cs-fence-header-named-title-font-weight);

				position: relative;
				align-items: center;
				height: 100%;
				max-width: 100%;

				overflow-x: auto;
				flex: 0 1 auto;
				margin-right: var(--size-4-1);

				&::before {
					content: "";
					display: block;
					position: sticky;
					left: 0;
					background: linear-gradient(to left, transparent, var(--cs-fence-fade-gradient-stop), var(--cs-fence-header-background-colour));
					min-width: var(--size-4-3);
					height: 100%;
				}

				&::after {
					content: "";
					display: block;
					position: sticky;
					right: 0;
					background: linear-gradient(to right, transparent, var(--cs-fence-fade-gradient-stop), var(--cs-fence-header-background-colour));
					min-width: var(--size-4-3);
					height: 100%;
				}

				&::-webkit-scrollbar {
					display: none;
				}

				p {
					margin-block-start: 0;
					margin-block-end: 0;
				}
			}

			> div.cs-external-reference {
				background-color: var(--cs-fence-header-external-reference-title-background-colour);
				color: var(--cs-fence-header-external-reference-title-text-colour);
				font-family: var(--cs-fence-header-external-reference-title-font-family);
				font-style: var(--cs-fence-header-external-reference-title-font-style);
				font-weight: var(--cs-fence-header-external-reference-title-font-weight);

				position: relative;
				align-items: center;
				height: 100%;
				max-width: 100%;

				overflow-x: auto;
				flex: 0 1 auto;
				margin-right: var(--size-4-1);

				> div {
					padding-left: var(--size-4-2);
					display: flex;
				}

				div.cs-external-reference-repository,
				div.cs-external-reference-repository-icon {
					color: var(--cs-fence-header-external-reference-title-repository-colour);
				}

				div.cs-external-reference-version,
				div.cs-external-reference-version-icon {
					color: var(--cs-fence-header-external-reference-title-version-colour);
				}

				div.cs-external-reference-timestamp,
				div.cs-external-reference-timestamp-icon {
					color: var(--cs-fence-header-external-reference-title-timestamp-colour);
				}

				&::-webkit-scrollbar {
					display: none;
				}

				button {
					opacity: 0;
					box-shadow: none;
					height: 100%;
					margin-left: var(--size-4-2);
					padding-left: var(--size-4-2);
					padding-right: var(--size-4-2);

					background-color: var(--cs-fence-button-inactive-background-colour);
					color: var(--cs-fence-button-inactive-colour);

					&:hover {
						background-color: var(--cs-fence-button-hover-background-colour);
						color: var(--cs-fence-button-hover-colour);
					}

					&:active {
						background-color: var(--cs-fence-button-active-background-colour);
						color: var(--cs-fence-button-active-colour);
					}
				}

				&::before {
					content: "";
					display: block;
					position: sticky;
					left: 0;
					background: linear-gradient(to left, transparent, var(--cs-fence-fade-gradient-stop), var(--cs-fence-header-background-colour));
					min-width: var(--size-4-3);
					height: 100%;
				}

				&::after {
					content: "";
					display: block;
					position: sticky;
					right: 0;
					background: linear-gradient(to right, transparent, var(--cs-fence-fade-gradient-stop), var(--cs-fence-header-background-colour));
					min-width: var(--size-4-3);
					height: 100%;
				}
			}

			> div.cs-execute-code-title {
				background-color: var(--cs-fence-header-execute-code-title-background-colour);
				color: var(--cs-fence-header-execute-code-title-text-colour);
				font-family: var(--cs-fence-header-execute-code-title-font-family);
				font-style: var(--cs-fence-header-execute-code-title-font-style);
				font-weight: var(--cs-fence-header-execute-code-title-font-weight);

				position: relative;
				align-items: center;
				height: 100%;
			}

			// > button.cs-copy-code-button,
			> button.cs-edit-code-button {
  				margin-left: auto;
			}

			> div.cs-separator {
				color: var(--cs-fence-header-separator-background-colour);
			}
		}

		.cs-line-number {
			background-color: var(--cs-fence-gutter-background-colour);
			color: var(--cs-fence-gutter-text-colour);
			font-family: var(--cs-fence-gutter-font-family);
			font-style: var(--cs-fence-gutter-font-style);
			font-weight: var(--cs-fence-gutter-font-weight);

			position: sticky;
			left: 0;
			user-select: none;

			padding-right: var(--size-4-3);
			margin-right: var(--size-4-3);
			border-right: var(--cs-fence-gutter-border-width) solid var(--cs-fence-gutter-border-colour);
			// box-shadow: calc(var(--size-4-4) * -1) 0px var(--cs-fence-gutter-background-colour), 0px calc(var(--size-4-1) * -1) var(--cs-fence-gutter-background-colour), 0px var(--size-4-4) var(--cs-fence-gutter-background-colour);

			&::before {
				content: "";
				position: absolute;
				top: calc(-1 * var(--size-4-1));
				bottom: -100%;
				left: calc(-1 * calc(var(--size-4-4) - var(--cs-fence-gutter-language-border-size)));
				right: 0;
				background-color: inherit;
				z-index: -5;
				box-shadow: calc(-1 * var(--cs-fence-gutter-language-border-size)) 0 0px var(--cs-language-border-gutter-colour);
			}
		}

		div.cs-footer {
			text-align: center;
			height: var(--size-4-4);
			// max-height: var(--size-4-4);
			position: relative;
			left: 0;
			// transition-property: max-height;
			// transition-duration: var(--cs-transition-length-fold);
			// transition-timing-function: ease-in-out;

			&[data-cs-fold="true"] {
				// max-height: unset;
				// padding-bottom: var(--size-4-3);
			}

			button {
				height: 100%;
				opacity: 0;
				box-shadow: none;
				background-color: var(--cs-fence-button-inactive-background-colour);
				color: var(--cs-fence-button-inactive-colour);

				&:hover {
					background-color: var(--cs-fence-button-hover-background-colour);
					color: var(--cs-fence-button-hover-colour);
				}

				&:active {
					background-color: var(--cs-fence-button-active-background-colour);
					color: var(--cs-fence-button-active-colour);
				}
			}
				// button {
				// 	margin-left: var(--size-4-2);
				// 	padding-left: var(--size-4-2);
				// 	padding-right: var(--size-4-2);
				// }
		}

		.cs-comment {
			padding: 0;
		}
	}

	div.cs-header {
		button.cs-fold-code-button {
			// transform:rotate(180deg);
		}
	}

	div.cs-header[data-cs-fold="true"] button.cs-fold-code-button > svg {
		transform: rotate(-90deg);
	}

	div.cs-header,
	div.cs-footer {
		button {
			padding-left: var(--size-4-2);
			padding-right: var(--size-4-2);
			height: 100%;
		}

		button.copy-code-button {
			display: none;
		}

		button.cs-edit-code-button,
		button.cs-copy-code-button,
		button.cs-fold-code-button {
			display: block;
			// position: sticky;
			// top: 0;
			// left: calc(100% - 32px);
			// grid-row: 1;
			// padding: 0;
			// margin: 0;
			// margin-left: var(--size-4-4);
			// margin-bottom: var(--size-4-2);
			z-index: 4;
			opacity: 0;

			background-color: var(--cs-fence-button-inactive-background-colour);
			color: var(--cs-fence-button-inactive-colour);

			> svg {
				// position: sticky;
				// left: 0;
				z-index: inherit;
			}

			&:hover {
				background-color: var(--cs-fence-button-hover-background-colour);
				color: var(--cs-fence-button-hover-colour);
			}

			&:active {
				background-color: var(--cs-fence-button-active-background-colour);
				color: var(--cs-fence-button-active-colour);
			}
		}
	}

	pre.cs-pre button,
	div.cm-line:not(.cm-embed-block).cs-line button {
		transition-property: opacity, background-color, color, transform;
		transition-duration: var(--cs-transition-length-button);
		transition-timing-function: ease-in-out;
		box-shadow: none;

		& > svg{
			transition-property: transform;
			transition-duration: var(--cs-transition-length-button);
			transition-timing-function: ease-in-out;
		}
	}


	.cs-pre-parent {
		> pre.cs-pre {
			border-radius: var(--cs-fence-curvature);
			background-color: var(--cs-fence-background-colour);
			overflow-x: auto;
			position: relative;
			display: grid;
			grid-template-columns: calc(100% - var(--size-4-12)) var(--size-4-12);
			padding-right: var(--cs-fence-fade-width);
			padding-bottom: 0;

			&::after {
				content: "";
				background: linear-gradient(to right, transparent, var(--cs-fence-fade-gradient-stop), var(--cs-fence-background-colour));
				position: sticky;
				left: 100%;
				margin-right: calc(-1 * var(--size-4-3));
				width: var(--size-4-3);
				height: 100%;
				z-index: 3;
				grid-row: 2;
			}

			> div.cs-header {
				grid-row: 1;
			}

			> code.cs-code {
				display: grid;
				grid-row: 2;
				grid-column: span 2;
				// grid-column-start: 1;
				// grid-column-end: 2;
				grid-template-columns: min-content auto;
				grid-template-rows: auto;
				overflow: visible;
				width: max-content;
				padding-right: var(--cs-fence-fade-width);
				padding-top: var(--size-4-1);

				max-height: unset;
				opacity: 1;
				transition-property: max-height, opacity, color;
				transition-duration: var(--cs-transition-length-fold);
				transition-timing-function: ease-in-out;

				&[data-cs-wrap = "unwrapped"],
				&[data-cs-wrap = "unwrapped-inactive"]:not(:active) {
					width: max-content;
					padding-right: var(--cs-fence-fade-width);
				}

				&[data-cs-wrap = "wrapped"],
				&[data-cs-wrap = "unwrapped-inactive"]:active {
					width: unset;
					padding-right: 0;
				}

				> div.cs-line {
					display: contents;

					&,
					* {
						transition-property: opacity, color, background-color, border;
						transition-duration: var(--cs-transition-length-fold);
						transition-timing-function: ease-in-out;
					}

					// transition-property: opacity, color;
					// transition-duration: var(--cs-transition-length-fold);
					// transition-timing-function: ease-in-out;

					> div.cs-line-number {
						grid-column: 1;
						text-align: right;

						&::after {
							content: "";
							position: absolute;
							top: 0px;
							bottom: 0px;
							width: var(--size-4-3);
							left: calc(100% + var(--cs-fence-gutter-border-width));
							right: calc(-1 * var(--size-4-3));
							// background: linear-gradient(to left, transparent, 50%, var(--cs-fence-background-colour));
							background: linear-gradient(to left, transparent, var(--cs-fence-fade-gradient-stop), var(--cs-fence-background-colour));
							// mask-image: linear-gradient(to right, black, transparent);
							// backdrop-filter: blur(2px);
							z-index: 10;
						}

						&.cs-line-numbers-enabled-false {
							display: none;
						}

						&.cs-line-numbers-enabled-true {
							display: block;
						}
					}

					> div.cs-line-text {
						overflow: visible;
						// overflow: /;
						grid-column: 2;
						color: var(--cs-fence-text-colour);
					}
				}
			}

			> div.cs-footer {
				grid-row: 3;
				grid-column: span 2;

				// &::before {
				// 	content: "";
				// 	position: absolute;
				// 	// top: calc(-1 * var(--size-4-3));
				// 	// left: calc(-1 * calc(var(--size-4-4) - var(--cs-fence-gutter-language-border-size)));
				// 	// right: calc(-1 * calc(var(--size-4-12) + var(--cs-fence-fade-width)));
				// 	bottom: 0;
				// 	background: inherit;
				// 	z-index: 2;
				// 	box-shadow: calc(-1 * var(--cs-fence-gutter-language-border-size)) 0 0px var(--cs-language-border-gutter-colour);
				// }

				button.cs-fold-code-button {
					display: inline-flex;
				}
			}
		}

		pre.cs-pre[data-cs-fold="true"] {
			div.cs-header[data-cs-fold="true"] {
				&::after {
					// opacity: 0.5;
				}
			}

			> code.cs-code {
				max-height: 0 !important;
				// opacity: 0;
				// overflow: hidden;
				// visibility: hidden;
				// div.cs-line,
				div.cs-line * {
					color: rgba(0,0,0,0) !important;
					--cs-fence-gutter-background-colour: var(--cs-fence-background-colour);
					--cs-fence-gutter-border-colour: var(--cs-fence-background-colour);
				}
			}

			button.cs-fold-code-button {
				opacity: 1;
			}
		}

		pre.cs-pre:hover div button {
			opacity: 1;
		}
	}

	.markdown-source-view {
		div.cm-contentContainer {
			// display: grid;
		}

		div.cm-embed-block {
			&:not(.cm-table-widget):has(> .cs-pre-parent) {
				border-radius: var(--cs-fence-curvature);
			}
		}

		div.cm-line:not(.cs-line) > div.cs-header {
			display: none;
		}

		div.HyperMD-codeblock-begin.cs-line,
		div.HyperMD-codeblock-end.cs-line {
			--cs-fence-gutter-border-colour: var(--cs-fence-background-colour);

			white-space: pre-wrap !important;
			// z-index: -10;
			// overflow: hidden;

			span.cm-hmd-codeblock {
				// display: inline;
				// height: var(--size-4-1);
			}
		}


		div.HyperMD-codeblock-begin.cs-line:has(div.cs-header),
		div.HyperMD-codeblock-end.cs-line:has(div.cs-footer) {
			.cm-widgetBuffer {
				display: none !important;
			}
		}

		div.HyperMD-codeblock-begin.cs-line + div.cs-line  {
			padding-top: var(--size-4-1) !important;
		}

		div.cm-line:not(.cm-embed-block).cs-line {
  			background: linear-gradient(to right, var(--cs-language-border-gutter-colour) var(--cs-fence-gutter-language-border-size), var(--cs-fence-gutter-background-colour) var(--cs-fence-gutter-language-border-size) calc(var(--size-4-4) + var(--cs-gutter-char-size) + var(--size-4-3)), var(--cs-fence-background-colour) calc(var(--size-4-4) + var(--cs-gutter-char-size) + var(--size-4-3)));
			color: var(--cs-fence-text-colour);
			padding-left: calc(var(--size-4-4) + var(--cs-gutter-char-size) + var(--size-4-3) + var(--size-2-1) + var(--size-4-3));

			white-space: nowrap;
			overflow-x: auto;
			overflow-y: hidden;

			padding-right: var(--cs-fence-fade-width);

			font-family: var(--font-monospace);
			font-size: var(--code-size);

			// display: inline;

			// &::before {
			// 	display: block;
			// 	content: "";
			// 	width: 10px;
			// 	height: 100%;
			// 	background-color: pink;;
			// }

			&:has(div.cs-header) {
				padding-left: var(--size-4-4);
			}

			div.cs-header {
				padding-top: var(--size-4-3);

				&::before {
					box-shadow: none;
					// box-shadow: calc(-1 * var(--size-4-1)) 0 0px var(--cs-language-border-header-colour);
					// box-shadow: calc(-1 * var(--size-4-4)) 0 0px var(--cs-language-border-separator-colour), calc(-2 * var(--size-4-4)) 0 0px var(--cs-language-border-gutter-colour);
				}

				&::after {
					box-shadow: none;
					// box-shadow: calc(-1 * var(--size-4-1)) 0 0px var(--cs-language-border-separator-colour)
					// box-shadow: calc(-1 * var(--size-4-1)) 0 0px var(--cs-language-border-header-colour);
					// box-shadow: calc(-1 * var(--size-4-4)) 0 0px var(--cs-language-border-separator-colour), calc(-2 * var(--size-4-4)) 0 0px var(--cs-language-border-gutter-colour);
				}
			}

			span.code-block-flair {
				z-index: 5;
				display: none;
			}

			span.cs-line-number {
				// background-color: transparent;
				display: inline-block;
				height: 100%;
				// box-shadow: var(--cs-fence-gutter-border-width) 0px purple;
				// box-shadow: 0px calc(var(--size-4-1) * -1) var(--cs-fence-gutter-background-colour), 0px var(--size-4-1) var(--cs-fence-gutter-background-colour); // calc(var(--size-4-4) * -1) 0px var(--cs-fence-gutter-background-colour),
				overflow-y: visible;
				margin-left: calc(-1 * calc(var(--cs-gutter-char-size) + var(--size-4-3) + var(--size-2-1) + var(--size-4-3)));
				left: calc(-1 * calc(var(--cs-gutter-char-size) + var(--size-4-3) + var(--size-2-1) + var(--size-4-3)));

				&::before {
					box-shadow: none;
					// box-shadow: calc(-1 * var(--size-4-1)) 0 0px var(--cs-language-border-gutter-colour);
					z-index: -5;
					bottom: 0;
					// content: none;
				}
			}

			// span:not(.cs-line-number) {
			// 	grid-column: 2;
			// 	grid-row: 1;
			// 	overflow-wrap: break-word;
			// }

			div.cs-footer {
				margin-left: calc(-1 * calc(var(--cs-gutter-char-size) + var(--size-4-3) + var(--size-2-1) + var(--size-4-3)));
				// margin-right: var(--cs-fence-fade-width);
				// width: calc(100% - var(--cs-fence-fade-width));

				button {
					opacity: 1;
					display: inline-flex;

				}
			}

			span.cs-filler {
				user-select: none;
				visibility: hidden;
				padding: 0;
			}

			&::-webkit-scrollbar {
				display: none;
			}

			button {
				opacity: 1;
				box-shadow: none;
			}
		}

		div.cs-line:has(div.cs-header):has( + div[contenteditable="false"] + div.cs-line > div.cs-footer) {
			// --cs-fence-header-separator-background-colour: var(--cs-fence-header-background-colour)
		}

	}
}

body.cs-plugin.cs-line-numbers-enabled-false {
	.cs-pre-parent {
		> pre.cs-pre {
			> code.cs-code {
				> div.cs-line {
					> div.cs-line-number {
						&:not(.cs-line-numbers-enabled-true) {
							display: none;
						}
					}
				}
			}
		}
	}
}

body.cs-plugin.cs-unwrap-false {
	.cs-pre-parent {
		> pre.cs-pre {
			> code.cs-code:not([cs-data-wrap]) {
				width: unset;
				padding-right: 0;
			}
		}
	}

	div.cs-line {
		.cs-filler {
			display: inline;
		}
	}
}

body.cs-plugin.cs-unwrap-inactive {
	.cs-pre-parent {
		> pre.cs-pre {
			> code.cs-code:not([cs-data-wrap]):active {
				width: unset;
				padding-right: 0;
			}
		}
	}

	div.cs-line.cm-active {
		white-space: pre-wrap;

		.cs-filler {
			display: inline;
		}
	}
}

//!====================================================================
//! Temp
div.HyperMD-codeblock.cm-line {
	// white-space: nowrap;
	// overflow-x: auto;
}
