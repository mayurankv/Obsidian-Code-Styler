body.cs-plugin {
	--cs-fixed-left-fence: var(--size-4-3);
	--cs-fixed-gradient-1: 10%;
	--cs-language-border: var(--size-4-1);
	--cs-gutter-border-width: var(--size-2-1);

	.markdown-source-view.mod-cm6 .cm-embed-block:not(.cm-table-widget):has(> .cs-pre-parent) {
		border-radius: var(--cs-code-fence-radius);
	}

	.cs-pre-parent {
		> pre.cs-pre {
			border-radius: var(--cs-code-fence-radius);
			overflow-x: auto;
			position: relative;
			display: grid;
			grid-template-columns: calc(100% - var(--size-4-12)) var(--size-4-12);
			background-color: var(--cs-code-background-colour);
			padding-right: var(--cs-fixed-left-fence);

			&::after {
				content: "";
				background: linear-gradient(to right, transparent, var(--cs-fixed-gradient-1), var(--cs-code-background-colour));
				position: sticky;
				left: 100%;
				margin-right: calc(-1 * var(--size-4-3));
				width: var(--size-4-3);
				height: 100%;
				z-index: 3;
				grid-row: 2;
			}

			> div.cs-header {
				box-sizing: content-box;
				user-select: none;
				width: 100%;
				display: flex;
				position: sticky;
				left: 0;
				grid-row: 1;
				justify-content: flex-start;
				align-items: center;
				border-bottom: var(--size-2-1) solid transparent;
				background-color: var(--cs-code-header-background-color);
				z-index: 4;
				padding-bottom: var(--size-4-2);

				&::before {
					content: "";
					position: absolute;
					top: calc(-1 * var(--size-4-3));
					left: calc(-1 * calc(var(--size-4-4) - var(--cs-language-border)));
					right: calc(-1 * calc(var(--size-4-12) + var(--cs-fixed-left-fence)));
					bottom: 0;
					background: inherit;
					z-index: 2;
					box-shadow: calc(-1 * var(--size-4-4)) 0 0px var(--cs-language-header-colour);
				}

				&::after {
					content: "";
					position: absolute;
					bottom: calc(-1 * var(--size-2-1));
					top: 0;
					left: calc(-1 * calc(var(--size-4-4) - var(--cs-language-border)));
					right: calc(-1 * calc(var(--size-4-12) + var(--cs-fixed-left-fence)));
					z-index: 1;
					background: var(--cs-header-separator-color);
					box-shadow: calc(-1 * var(--size-4-4)) 0 0px var(--cs-language-separator-colour);
				}

				> div {
					display: flex;
					flex-direction: row;
					flex: 0 0 auto;
					// overflow: overlay;
					white-space: nowrap;
					z-index: inherit;

					&:not(:first-child):not(.cs-separator) {
						margin-left: 1em
					}
				}

				> div.cs-icon-container {
					height: 100%;

					img.cs-icon {
						width: var(--cs-language-icon-size);
						height: var(--cs-language-icon-size);
						filter: var(--cs-language-icon-filter, none);
					}
				}

				> div.cs-language-title {
					font-weight: var(--cs-language-title-weight);
					color: var(--cs-language-title-color);
				}

				> div.cs-title {
					overflow-x: auto;
					max-width: 100%;
					flex: 0 1 auto;
					font-weight: var(--cs-title-weight);
					color: var(--cs-title-color);

					&::-webkit-scrollbar {
						display: none;
					}

					p {
						margin-block-start: 0;
						margin-block-end: 0;
					}
				}

				> div.cs-external-reference {
					overflow-x: auto;
					max-width: 100%;
					flex: 0 1 auto;

					&::-webkit-scrollbar {
						display: none;
					}

					button {
						background-color: transparent;
						box-shadow: none;
						height: 100%;
					}
				}

				> div.cs-execute-code-title {

				}

				> div.cs-separator {

				}
			}

			> code.cs-code {
				display: grid;
				grid-row: 2;
				grid-column: span 2;
				// grid-column-start: 1;
				// grid-column-end: 2;
				grid-template-columns: min-content auto;
				grid-template-rows: auto;
				overflow: visible;
				width: max-content;
				padding-right: var(--cs-fixed-left-fence);
				padding-top: var(--size-4-1);

				&[data-cs-wrap = "unwrapped"],
				&[data-cs-wrap = "unwrapped-inactive"]:not(:active) {
					width: max-content;
					padding-right: var(--cs-fixed-left-fence);
				}

				&[data-cs-wrap = "wrapped"],
				&[data-cs-wrap = "unwrapped-inactive"]:active {
					width: unset;
					padding-right: 0;
				}

				> div.cs-line {
					display: contents;

					> div.cs-line-number {
						position: sticky;
						// top: auto;
						left: 0;
						grid-column: 1;
						user-select: none;
						text-align: right;
						padding-right: var(--size-4-3);
						margin-right: var(--size-4-3);
						color: var(--cs-code-gutter-color);
						background-color: var(--cs-code-gutter-background-color);
						border-right: var(--cs-gutter-border-width) solid var(--cs-gutter-border-colour);
						// box-shadow: calc(var(--size-4-4) * -1) 0px var(--cs-code-gutter-background-color);

						&::before {
							content: "";
							position: absolute;
							top: calc(-1 * var(--size-4-1));
							bottom: -100%;
							left: calc(-1 * calc(var(--size-4-4) - var(--cs-language-border)));
							right: 0;
							background-color: inherit;
							z-index: -5;
							box-shadow: calc(-1 * var(--size-4-4)) 0 0px var(--cs-language-background-colour);
							// border-radius: 8px;
						}

						&::after {
							content: "";
							position: absolute;
							top: 0px;
							bottom: 0px;
							width: var(--size-4-3);
							left: calc(100% + var(--cs-gutter-border));
							right: calc(-1 * var(--size-4-3));
							// background: linear-gradient(to left, transparent, 50%, var(--cs-code-background-colour));
							background: linear-gradient(to left, transparent, var(--cs-fixed-gradient-1), var(--cs-code-background-colour));
							// mask-image: linear-gradient(to right, black, transparent);
							// backdrop-filter: blur(2px);
							z-index: 10;
						}

						&.cs-line-numbers-enabled-false {
							display: none;
						}

						&.cs-line-numbers-enabled-true {
							display: block;
						}
					}

					> div.cs-line-text {
						overflow: visible;
						// overflow: /;
						grid-column: 2;
					}
				}
			}

			button.copy-code-button {
				position: sticky;
				top: 0;
				left: calc(100% - 32px);
				grid-row: 1;
				padding: 0;
				margin: 0;
				margin-left: var(--size-4-4);
				margin-bottom: var(--size-4-2);
				z-index: 4;

				> svg {
					// position: sticky;
					// left: 0;
					z-index: inherit;
				}
			}
		}
	}
}

body.cs-plugin.cs-line-numbers-enabled-false {
	.cs-pre-parent {
		> pre.cs-pre {
			> code.cs-code {
				> div.cs-line {
					> div.cs-line-number {
						&:not(.cs-line-numbers-enabled-true) {
							display: none;
						}
					}
				}
			}
		}
	}
}

body.cs-plugin.cs-unwrap-false {
	.cs-pre-parent {
		> pre.cs-pre {
			> code.cs-code:not([cs-data-wrap]) {
				width: unset;
				padding-right: 0;
			}
		}
	}
}

body.cs-plugin.cs-unwrap-inactive {
	.cs-pre-parent {
		> pre.cs-pre {
			> code.cs-code:not([cs-data-wrap]):active {
				width: unset;
				padding-right: 0;
			}
		}
	}
}

//! Temp
div.HyperMD-codeblock.cm-line {
	white-space: nowrap;
	overflow-x: auto;

	&::-webkit-scrollbar {
		display: none;
	}

	.cs-filler {
		user-select: none;
		visibility: hidden;
		// display: none;
	}
}
